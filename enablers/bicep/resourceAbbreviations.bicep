@description('Strongly typed CAF abbreviation map for Azure resources.')
type ResourceAbbreviation = {
  aiSearch: string
  aksCluster: string
  aksSystemNodePool: string
  aksUserNodePool: string
  apiManagementServiceInstance: string
  appConfigurationStore: string
  applicationGateway: string
  applicationInsights: string
  applicationSecurityGroup: string
  appServiceEnvironment: string
  appServicePlan: string
  automationAccount: string
  availabilitySet: string
  azureAiFoundryAccount: string
  azureAiFoundryAccountProject: string
  azureAiFoundryHub: string
  azureAiFoundryHubProject: string
  azureAiServicesMultiServiceAccount: string
  azureAiVideoIndexer: string
  azureAnalysisServicesServer: string
  azureArcEnabledKubernetesCluster: string
  azureArcEnabledServer: string
  azureArcGateway: string
  azureArcPrivateLinkScope: string
  azureBastion: string
  azureCacheForRedisInstance: string
  azureCosmosDbDatabase: string
  azureCosmosDbForApacheCassandraAccount: string
  azureCosmosDbForApacheGremlinAccount: string
  azureCosmosDbForMongoDbAccount: string
  azureCosmosDbForNoSqlAccount: string
  azureCosmosDbForTableAccount: string
  azureCosmosDbPostgreSqlCluster: string
  azureDatabricksAccessConnector: string
  azureDatabricksWorkspace: string
  azureDataExplorerCluster: string
  azureDataExplorerClusterDatabase: string
  azureDataFactory: string
  azureDigitalTwinInstance: string
  azureLoadTestingInstance: string
  azureMachineLearningWorkspace: string
  azureManagedGrafana: string
  azureManagedRedis: string
  azureMigrateProject: string
  azureMonitorActionGroup: string
  azureMonitorAlertProcessingRule: string
  azureMonitorDataCollectionRule: string
  azureOpenAiService: string
  azurePolicyDefinition: string
  azureSqlDatabase: string
  azureSqlDatabaseServer: string
  azureSqlElasticJobAgent: string
  azureSqlElasticPool: string
  azureStorSimple: string
  azureStreamAnalytics: string
  azureSynapseAnalyticsPrivateLinkHub: string
  azureSynapseAnalyticsSparkPool: string
  azureSynapseAnalyticsSqlDedicatedPool: string
  azureSynapseAnalyticsWorkspace: string
  backupVault: string
  backupVaultPolicy: string
  batchAccount: string
  blueprint: string
  blueprintAssignment: string
  botService: string
  cdnEndpoint: string
  cdnProfile: string
  cloudService: string
  communicationServices: string
  computerVision: string
  connection: string
  containerApp: string
  containerAppEnvironment: string
  containerAppJob: string
  containerInstance: string
  containerRegistry: string
  contentModerator: string
  contentSafety: string
  customVisionPrediction: string
  customVisionTraining: string
  databaseMigrationServiceInstance: string
  dataCollectionEndpoint: string
  dataLakeAnalyticsAccount: string
  dataLakeStoreAccount: string
  deploymentScripts: string
  diskEncryptionSet: string
  dnsForwardingRuleset: string
  dnsPrivateResolver: string
  dnsPrivateResolverInboundEndpoint: string
  dnsPrivateResolverOutboundEndpoint: string
  dnsZonePrivate: string
  dnsZonePublic: string
  documentIntelligence: string
  eventGridDomain: string
  eventGridNamespace: string
  eventGridSubscription: string
  eventGridSystemTopic: string
  eventGridTopic: string
  eventHub: string
  eventHubsNamespace: string
  expressRouteCircuit: string
  expressRouteDirect: string
  expressRouteGateway: string
  fabricCapacity: string
  faceApi: string
  fileShare: string
  firewall: string
  firewallPolicy: string
  frontDoorClassic: string
  frontDoorFirewallPolicy: string
  frontDoorStandardPremiumEndpoint: string
  frontDoorStandardPremiumProfile: string
  functionApp: string
  gallery: string
  hdinsightHadoopCluster: string
  hdinsightHbaseCluster: string
  hdinsightKafkaCluster: string
  hdinsightMlServicesCluster: string
  hdinsightSparkCluster: string
  hdinsightStormCluster: string
  healthInsights: string
  hostingEnvironment: string
  imageTemplate: string
  immersiveReader: string
  integrationAccount: string
  iotHub: string
  ipGroup: string
  keyVault: string
  keyVaultManagedHsm: string
  languageService: string
  loadBalancerExternal: string
  loadBalancerInternal: string
  loadBalancerRule: string
  localNetworkGateway: string
  logAnalyticsQueryPack: string
  logAnalyticsWorkspace: string
  logicApp: string
  managedDiskData: string
  managedDiskOs: string
  managedIdentity: string
  managementGroup: string
  mapsAccount: string
  microsoftPurviewInstance: string
  mySqlDatabase: string
  natGateway: string
  networkInterface: string
  networkSecurityGroup: string
  networkSecurityGroupRule: string
  networkSecurityPerimeter: string
  networkWatcher: string
  notificationHub: string
  notificationHubsNamespace: string
  postgreSqlDatabase: string
  powerBiEmbedded: string
  privateEndpoint: string
  privateLink: string
  provisioningService: string
  provisioningServiceCertificate: string
  proximityPlacementGroup: string
  publicIpAddress: string
  publicIpPrefix: string
  recoveryServicesVault: string
  resourceGroup: string
  restorePointCollection: string
  routeFilter: string
  routeServer: string
  routeTable: string
  serviceBusNamespace: string
  serviceBusQueue: string
  serviceBusTopic: string
  serviceBusTopicSubscription: string
  serviceEndpointPolicy: string
  serviceFabricCluster: string
  serviceFabricManagedCluster: string
  signalR: string
  snapshot: string
  speechService: string
  sqlManagedInstance: string
  sqlServerStretchDatabase: string
  sshKey: string
  staticWebApp: string
  storageAccount: string
  storageSyncService: string
  templateSpec: string
  timeSeriesInsightsEnvironment: string
  trafficManagerProfile: string
  translator: string
  userDefinedRoute: string
  virtualDesktopApplicationGroup: string
  virtualDesktopHostPool: string
  virtualDesktopScalingPlan: string
  virtualDesktopWorkspace: string
  virtualMachine: string
  virtualMachineMaintenanceConfiguration: string
  virtualMachineScaleSet: string
  virtualNetwork: string
  virtualNetworkGateway: string
  virtualNetworkManager: string
  virtualNetworkPeering: string
  virtualNetworkSubnet: string
  virtualWan: string
  virtualWanHub: string
  vmStorageAccount: string
  vpnConnection: string
  vpnGateway: string
  vpnSite: string
  wafPolicy: string
  wafPolicyRuleGroup: string
  webApp: string
  webPubSub: string
}

@description('CAF-style abbreviations for Azure resource types grouped by service area.')
var resourceAbbreviations = {
  aiSearch: 'srch'
  aksCluster: 'aks'
  aksSystemNodePool: 'npsystem'
  aksUserNodePool: 'np'
  apiManagementServiceInstance: 'apim'
  appConfigurationStore: 'appcs'
  applicationGateway: 'agw'
  applicationInsights: 'appi'
  applicationSecurityGroup: 'asg'
  appServiceEnvironment: 'ase'
  appServicePlan: 'asp'
  automationAccount: 'aa'
  availabilitySet: 'avail'
  azureAiFoundryAccount: 'aif'
  azureAiFoundryAccountProject: 'proj'
  azureAiFoundryHub: 'hub'
  azureAiFoundryHubProject: 'proj'
  azureAiServicesMultiServiceAccount: 'ais'
  azureAiVideoIndexer: 'avi'
  azureAnalysisServicesServer: 'as'
  azureArcEnabledKubernetesCluster: 'arck'
  azureArcEnabledServer: 'arcs'
  azureArcGateway: 'arcgw'
  azureArcPrivateLinkScope: 'pls'
  azureBastion: 'bas'
  azureCacheForRedisInstance: 'redis'
  azureCosmosDbDatabase: 'cosmos'
  azureCosmosDbForApacheCassandraAccount: 'coscas'
  azureCosmosDbForApacheGremlinAccount: 'cosgrm'
  azureCosmosDbForMongoDbAccount: 'cosmon'
  azureCosmosDbForNoSqlAccount: 'cosno'
  azureCosmosDbForTableAccount: 'costab'
  azureCosmosDbPostgreSqlCluster: 'cospos'
  azureDatabricksAccessConnector: 'dbac'
  azureDatabricksWorkspace: 'dbw'
  azureDataExplorerCluster: 'dec'
  azureDataExplorerClusterDatabase: 'dedb'
  azureDataFactory: 'adf'
  azureDigitalTwinInstance: 'dt'
  azureLoadTestingInstance: 'lt'
  azureMachineLearningWorkspace: 'mlw'
  azureManagedGrafana: 'amg'
  azureManagedRedis: 'amr'
  azureMigrateProject: 'migr'
  azureMonitorActionGroup: 'ag'
  azureMonitorAlertProcessingRule: 'apr'
  azureMonitorDataCollectionRule: 'dcr'
  azureOpenAiService: 'oai'
  azurePolicyDefinition: '<descriptive>'
  azureSqlDatabase: 'sqldb'
  azureSqlDatabaseServer: 'sql'
  azureSqlElasticJobAgent: 'sqlja'
  azureSqlElasticPool: 'sqlep'
  azureStorSimple: 'ssimp'
  azureStreamAnalytics: 'asa'
  azureSynapseAnalyticsPrivateLinkHub: 'synplh'
  azureSynapseAnalyticsSparkPool: 'synsp'
  azureSynapseAnalyticsSqlDedicatedPool: 'syndp'
  azureSynapseAnalyticsWorkspace: 'synw'
  backupVault: 'bvault'
  backupVaultPolicy: 'bkpol'
  batchAccount: 'ba'
  blueprint: 'bp'
  blueprintAssignment: 'bpa'
  botService: 'bot'
  cdnEndpoint: 'cdne'
  cdnProfile: 'cdnp'
  cloudService: 'cld'
  communicationServices: 'acs'
  computerVision: 'cv'
  connection: 'con'
  containerApp: 'ca'
  containerAppEnvironment: 'cae'
  containerAppJob: 'caj'
  containerInstance: 'ci'
  containerRegistry: 'cr'
  contentModerator: 'cm'
  contentSafety: 'cs'
  customVisionPrediction: 'cstv'
  customVisionTraining: 'cstvt'
  databaseMigrationServiceInstance: 'dms'
  dataCollectionEndpoint: 'dce'
  dataLakeAnalyticsAccount: 'dla'
  dataLakeStoreAccount: 'dls'
  deploymentScripts: 'script'
  diskEncryptionSet: 'des'
  dnsForwardingRuleset: 'dnsfrs'
  dnsPrivateResolver: 'dnspr'
  dnsPrivateResolverInboundEndpoint: 'in'
  dnsPrivateResolverOutboundEndpoint: 'out'
  dnsZonePrivate: '<DNS domain name>'
  dnsZonePublic: '<DNS domain name>'
  documentIntelligence: 'di'
  eventGridDomain: 'evgd'
  eventGridNamespace: 'evgns'
  eventGridSubscription: 'evgs'
  eventGridSystemTopic: 'egst'
  eventGridTopic: 'evgt'
  eventHub: 'evh'
  eventHubsNamespace: 'evhns'
  expressRouteCircuit: 'erc'
  expressRouteDirect: 'erd'
  expressRouteGateway: 'ergw'
  fabricCapacity: 'fc'
  faceApi: 'face'
  fileShare: 'share'
  firewall: 'afw'
  firewallPolicy: 'afwp'
  frontDoorClassic: 'afd'
  frontDoorFirewallPolicy: 'fdfp'
  frontDoorStandardPremiumEndpoint: 'fde'
  frontDoorStandardPremiumProfile: 'afd'
  functionApp: 'func'
  gallery: 'gal'
  hdinsightHadoopCluster: 'hadoop'
  hdinsightHbaseCluster: 'hbase'
  hdinsightKafkaCluster: 'kafka'
  hdinsightMlServicesCluster: 'mls'
  hdinsightSparkCluster: 'spark'
  hdinsightStormCluster: 'storm'
  healthInsights: 'hi'
  hostingEnvironment: 'host'
  imageTemplate: 'it'
  immersiveReader: 'ir'
  integrationAccount: 'ia'
  iotHub: 'iot'
  ipGroup: 'ipg'
  keyVault: 'kv'
  keyVaultManagedHsm: 'kvmhsm'
  languageService: 'lang'
  loadBalancerExternal: 'lbe'
  loadBalancerInternal: 'lbi'
  loadBalancerRule: 'rule'
  localNetworkGateway: 'lgw'
  logAnalyticsQueryPack: 'pack'
  logAnalyticsWorkspace: 'log'
  logicApp: 'logic'
  managedDiskData: 'disk'
  managedDiskOs: 'osdisk'
  managedIdentity: 'id'
  managementGroup: 'mg'
  mapsAccount: 'map'
  microsoftPurviewInstance: 'pview'
  mySqlDatabase: 'mysql'
  natGateway: 'ng'
  networkInterface: 'nic'
  networkSecurityGroup: 'nsg'
  networkSecurityGroupRule: 'nsgsr'
  networkSecurityPerimeter: 'nsp'
  networkWatcher: 'nw'
  notificationHub: 'ntf'
  notificationHubsNamespace: 'ntfns'
  postgreSqlDatabase: 'psql'
  powerBiEmbedded: 'pbi'
  privateEndpoint: 'pep'
  privateLink: 'pl'
  provisioningService: 'provs'
  provisioningServiceCertificate: 'pcert'
  proximityPlacementGroup: 'ppg'
  publicIpAddress: 'pip'
  publicIpPrefix: 'ippre'
  recoveryServicesVault: 'rsv'
  resourceGroup: 'rg'
  restorePointCollection: 'rpc'
  routeFilter: 'rf'
  routeServer: 'rtserv'
  routeTable: 'rt'
  serviceBusNamespace: 'sbns'
  serviceBusQueue: 'sbq'
  serviceBusTopic: 'sbt'
  serviceBusTopicSubscription: 'sbts'
  serviceEndpointPolicy: 'se'
  serviceFabricCluster: 'sf'
  serviceFabricManagedCluster: 'sfmc'
  signalR: 'sigr'
  snapshot: 'snap'
  speechService: 'spch'
  sqlManagedInstance: 'sqlmi'
  sqlServerStretchDatabase: 'sqlstrdb'
  sshKey: 'sshkey'
  staticWebApp: 'stapp'
  storageAccount: 'st'
  storageSyncService: 'sss'
  templateSpec: 'ts'
  timeSeriesInsightsEnvironment: 'tsi'
  trafficManagerProfile: 'traf'
  translator: 'trsl'
  userDefinedRoute: 'udr'
  virtualDesktopApplicationGroup: 'vdag'
  virtualDesktopHostPool: 'vdpool'
  virtualDesktopScalingPlan: 'vdscaling'
  virtualDesktopWorkspace: 'vdws'
  virtualMachine: 'vm'
  virtualMachineMaintenanceConfiguration: 'mc'
  virtualMachineScaleSet: 'vmss'
  virtualNetwork: 'vnet'
  virtualNetworkGateway: 'vgw'
  virtualNetworkManager: 'vnm'
  virtualNetworkPeering: 'peer'
  virtualNetworkSubnet: 'snet'
  virtualWan: 'vwan'
  virtualWanHub: 'vhub'
  vmStorageAccount: 'stvm'
  vpnConnection: 'vcn'
  vpnGateway: 'vpng'
  vpnSite: 'vst'
  wafPolicy: 'waf'
  wafPolicyRuleGroup: 'wafrg'
  webApp: 'app'
  webPubSub: 'wps'
}

output abbreviations ResourceAbbreviation = resourceAbbreviations
